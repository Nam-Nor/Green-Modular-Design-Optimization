function multiDimArray = chromoSortMultiDim(chromeArray)
% CHROMOSOME OUTPUT FORMATTER FOR OUTPUT OF GENETIC ALGORITHM TO BE 
% PROCESSED BY THE FITNESS FUNCTION f(X). 
% THE FUNCTION IS USED IN THE FALL 2017 ME 6101 FINAL GROUP PROJECT ON
% GREEN MODULAR DESIGN OPTIMIZATION
%
% NOTE: TO OBTAIN THE FORMATTED CHROMOSOME USED IN F(X), USE chromoSort.m
%       INSTEAD!
%
% INPUT: [MXN DOUBLE]       CHROMOSOME OUTPUT FROM GA 
%                           EACH INDICE IN THE VECTOR IS A GENE INDICATING
%                           THE NUMBER OF MODULES TO BE GROUPED. THE INDEX 
%                           OF THE GENE POSITION INDICATES THE NUMBER OF
%                           COMPONENTS
%                       
% OUTPUT: [MxMxN DOUBLE]    REFORMATTED LOGICAL ARRAY BREAKING THE NUMBER  
%                           OF MODULES TO BE GROUPED INTO DIFFERENT ROWS. 
%                           THE TRUE/ONE INDICES MARK THE POSITIONS WHERE 
%                           THE MODULES ARE PRESENT - IE THE NUMBER OF 
%                           COMPONENTS IN THE MODULE
%         
% ENGINEERS: JAMES S COLLINS
%            BEN DUSSALT
%            NAMKHA NORSANG
%            NISHANTH KATHIRVEL
%
% PROJECT: ME 6101 GREEN MODULAR DESIGN GROUP PROJECT
% DATE: NOVEMBER 2017
% LOCATION: GEORGIA INSTITUTE OF TECHNOLOGY. ALT, GA
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% INDEX THE NUMBER OF ROWS AND COLUMNS OF THE INPUT CHROMOSOME ARRAY
[R,C]=size(chromeArray); 
% INITIALIZE THE OUTPUT AS A R3 ARRAY
multiDimArray=zeros(1,1,C);

% LOOP THROUGH THE ROWS OF THE INPUT ARRAY
for i=1:1:R
    % CALL FORMATTING FUNCTION FOR EACH 1xN CHROMOSOME VECTOR
    % THE OUTPUT IS A MxN ARRAY
    [v,m]=chromoSort(chromeArray(i,:));    
    % INSERT THE R2 ARRAY INTO A THIRD DIM LAYER OF THE R3 ARRAY. EACH OF
    % THESE THIRD DIM SLICES CORRESPONDS TO A ROW IN THE FUNCTION'S INPUT
    % CHROMOSOME ARRAY
    multiDimArray(i,1:m,:)=v;  
end



end